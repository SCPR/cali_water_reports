# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import datetime


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HydrologicRegion',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('hydrologic_region', models.CharField(max_length=255, null=True, verbose_name=b'Hydrologic Region', blank=True)),
                ('hydrologic_region_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Hydrologic Region Slug', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterConservationMethod',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('method_name', models.CharField(max_length=255, null=True, verbose_name=b'Water Conservation Method Name', blank=True)),
                ('method_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Water Conservation Method Slug', blank=True)),
                ('method_text', models.TextField(null=True, verbose_name=b'Water Conservation Method Text', blank=True)),
                ('method_image_path', models.URLField(max_length=1024, null=True, verbose_name=b'Image Path for Conservation Method', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterEnforcementMonthlyReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('report_date', models.DateField(default=datetime.datetime.now, db_index=True, verbose_name=b'Report Date', blank=True)),
                ('reported_to_state_date', models.DateField(default=datetime.datetime.now, db_index=True, verbose_name=b'Date Reported to the State', blank=True)),
                ('reporting_month', models.DateField(default=datetime.date(2015, 1, 1), verbose_name=b'Reporting Month', blank=True)),
                ('supplier_id', models.IntegerField(null=True, verbose_name=b'Supplier ID', blank=True)),
                ('supplier_name', models.CharField(max_length=255, verbose_name=b'Water Supplier Name', db_index=True)),
                ('supplier_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Water Supplier Slug', blank=True)),
                ('hydrologic_region', models.CharField(db_index=True, max_length=255, null=True, verbose_name=b'Hydrologic Region', blank=True)),
                ('hydrologic_region_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Hydrologic Region Slug', blank=True)),
                ('total_population_served', models.IntegerField(null=True, verbose_name=b'Total Population Served', blank=True)),
                ('mandatory_restrictions', models.BooleanField(default=False, verbose_name=b'Mandatory Restrictions')),
                ('water_days_allowed_week', models.IntegerField(null=True, verbose_name=b'Water Days Allowed/Week', blank=True)),
                ('complaints_received', models.IntegerField(null=True, verbose_name=b'Complaints Received', blank=True)),
                ('follow_up_actions', models.IntegerField(null=True, verbose_name=b'Follow-up Actions', blank=True)),
                ('warnings_issued', models.IntegerField(null=True, verbose_name=b'Warnings Issued', blank=True)),
                ('penalties_assessed', models.IntegerField(null=True, verbose_name=b'Penalties Assessed', blank=True)),
                ('enforcement_comments', models.TextField(null=True, verbose_name=b'Enforcement Comments', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterIncentive',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('incentives_details', models.TextField(null=True, verbose_name=b'Incentives Details', blank=True)),
                ('incentives_last_updated', models.DateTimeField(verbose_name=b'Incentive Last Updated', blank=True)),
                ('incentives_offered', models.BooleanField(default=False, verbose_name=b'Incentives Offered')),
                ('incentives_url', models.URLField(max_length=1024, null=True, verbose_name=b'URL Turf Incentive Details', blank=True)),
                ('turf_rebate_amount', models.FloatField(null=True, verbose_name=b'Turf Removal Reimbursement Amount', blank=True)),
                ('turf_removal_details', models.TextField(null=True, verbose_name=b'Turf Removal Details', blank=True)),
                ('turf_removal_last_updated', models.DateTimeField(verbose_name=b'Turf Removal Last Updated', blank=True)),
                ('turf_removal_offered', models.BooleanField(default=False, verbose_name=b'Turf Removal Offered')),
                ('turf_removal_url', models.URLField(max_length=1024, null=True, verbose_name=b'URL Turf Removal Details', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterRestriction',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('restriction_current_status', models.CharField(max_length=255, null=True, verbose_name=b'Current Status', blank=True)),
                ('restriction_current_url', models.URLField(max_length=1024, null=True, verbose_name=b'URL Water Restriction Details', blank=True)),
                ('restriction_violation_fine', models.FloatField(null=True, verbose_name=b'Fine amount for violation of restriction', blank=True)),
                ('restriction_how_enforce', models.TextField(null=True, verbose_name=b'Turf Removal Details', blank=True)),
                ('restriction', models.BooleanField(default=False, verbose_name=b'Restrictions In Place')),
                ('restriction_details', models.TextField(null=True, verbose_name=b'Restriction Details', blank=True)),
                ('restrictions_last_updated', models.DateTimeField(verbose_name=b'Restrictions Last Updated', blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterSupplier',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('supplier_name', models.CharField(unique=True, max_length=255, verbose_name=b'Water Supplier Name', db_index=True)),
                ('supplier_slug', models.SlugField(null=True, max_length=255, blank=True, unique=True, verbose_name=b'Water Supplier Slug')),
                ('supplier_url', models.URLField(max_length=1024, null=True, verbose_name=b'URL to Water Supplier Home Page', blank=True)),
                ('supplier_mwd_member', models.BooleanField(default=False, verbose_name=b'Member of MWD?')),
                ('hydrologic_region', models.CharField(max_length=255, null=True, verbose_name=b'Hydrologic Region', blank=True)),
                ('hydrologic_region_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Hydrologic Region Slug', blank=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name=b'Date Created')),
                ('supplier_notes', models.TextField(null=True, verbose_name=b'Notes About This Water Supplier', blank=True)),
                ('april_7_tier', models.IntegerField(null=True, verbose_name=b'April 7 Reduction Tier', blank=True)),
                ('april_7_reduction', models.FloatField(null=True, verbose_name=b'April 7 Reduction Percent', blank=True)),
                ('april_7_rgpcd', models.FloatField(null=True, verbose_name=b'April 7 RGPCD', blank=True)),
                ('april_18_tier', models.IntegerField(null=True, verbose_name=b'April 18 Reduction Tier', blank=True)),
                ('april_18_reduction', models.FloatField(null=True, verbose_name=b'April 18 Reduction Percent', blank=True)),
                ('april_18_rgpcd', models.FloatField(null=True, verbose_name=b'April 18 RGPCD', blank=True)),
                ('april_28_tier', models.IntegerField(null=True, verbose_name=b'April 28 Reduction Tier', blank=True)),
                ('april_28_reduction', models.FloatField(null=True, verbose_name=b'April 28 Reduction Percent', blank=True)),
                ('april_28_rgpcd', models.FloatField(null=True, verbose_name=b'April 28 RGPCD', blank=True)),
                ('june_5_tier', models.IntegerField(null=True, verbose_name=b'June 5 Reduction Tier', blank=True)),
                ('june_5_reduction', models.FloatField(null=True, verbose_name=b'June 5 Reduction Percent', blank=True)),
                ('june_5_rgpcd', models.FloatField(null=True, verbose_name=b'June 5 RGPCD', blank=True)),
                ('june_5_status', models.CharField(max_length=255, null=True, verbose_name=b'June 5 Status', blank=True)),
                ('june_11_tier', models.IntegerField(null=True, verbose_name=b'June 11 Reduction Tier', blank=True)),
                ('june_11_reduction', models.FloatField(null=True, verbose_name=b'June 11 Reduction Percent', blank=True)),
                ('june_11_rgpcd', models.FloatField(null=True, verbose_name=b'June 11 RGPCD', blank=True)),
                ('june_11_status', models.CharField(max_length=255, null=True, verbose_name=b'June 11 Status', blank=True)),
                ('june_11_estimated_savings', models.CharField(max_length=255, null=True, verbose_name=b'June 11 Estimated Savings', blank=True)),
                ('production_2013_june', models.FloatField(null=True, blank=True)),
                ('production_2013_july', models.FloatField(null=True, blank=True)),
                ('production_2013_aug', models.FloatField(null=True, blank=True)),
                ('production_2013_sept', models.FloatField(null=True, blank=True)),
                ('production_2013_oct', models.FloatField(null=True, blank=True)),
                ('production_2013_nov', models.FloatField(null=True, blank=True)),
                ('production_2013_dec', models.FloatField(null=True, blank=True)),
                ('production_2013_jan', models.FloatField(null=True, blank=True)),
                ('production_2013_feb', models.FloatField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='WaterSupplierMonthlyReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('report_date', models.DateField(default=datetime.datetime.now, db_index=True, verbose_name=b'Report Date', blank=True)),
                ('supplier_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Water Supplier Slug', blank=True)),
                ('stage_invoked', models.CharField(max_length=255, null=True, verbose_name=b'Stage Invoked', blank=True)),
                ('mandatory_restrictions', models.BooleanField(default=False, verbose_name=b'Mandatory Restrictions')),
                ('reporting_month', models.DateField(default=datetime.date(2015, 1, 1), verbose_name=b'Reporting Month', blank=True)),
                ('total_monthly_potable_water_production_2014', models.FloatField(null=True, verbose_name=b'Total Monthly Potable Water Production 2014', blank=True)),
                ('total_monthly_potable_water_production_2013', models.FloatField(null=True, verbose_name=b'Total Monthly Potable Water Production 2013', blank=True)),
                ('units', models.CharField(max_length=255, null=True, verbose_name=b'Units', blank=True)),
                ('qualification', models.TextField(null=True, verbose_name=b'Qualification', blank=True)),
                ('total_population_served', models.IntegerField(null=True, verbose_name=b'Total Population Served', blank=True)),
                ('reported_rgpcd', models.FloatField(null=True, verbose_name=b'Reported Residential Gallons-per-capita-per-day (starting In September 2014)', blank=True)),
                ('enforcement_actions', models.TextField(null=True, verbose_name=b'Enforcement Actions (Optional)', blank=True)),
                ('implementation', models.TextField(null=True, verbose_name=b'Implementation (Optional)', blank=True)),
                ('recycled_water', models.TextField(null=True, verbose_name=b'Recycled Water (Optional)', blank=True)),
                ('recycled_water_units', models.TextField(null=True, verbose_name=b'Recycled Water Units', blank=True)),
                ('calculated_production_monthly_gallons_month_2014', models.FloatField(null=True, verbose_name=b'Calculated Production Monthly Gallons Month 2014', blank=True)),
                ('calculated_production_monthly_gallons_month_2013', models.FloatField(null=True, verbose_name=b'Calculated Production Monthly Gallons Month 2013', blank=True)),
                ('calculated_rgpcd_2014', models.FloatField(db_index=True, null=True, verbose_name=b'CALCULATED RGPCD 2014 (Values calculated by Water Board staff using methodology available at http://www.waterboards.ca.gov/waterrights/water_issues/programs/drought/docs/ws_tools/guidance_estimate_res_gpcd.pdf)', blank=True)),
                ('calculated_rgpcd_2013', models.FloatField(db_index=True, null=True, verbose_name=b'CALCULATED RGPCD 2013 (Values calculated by Water Board staff using methodology available at http://www.waterboards.ca.gov/waterrights/water_issues/programs/drought/docs/ws_tools/guidance_estimate_res_gpcd.pdf)', blank=True)),
                ('percent_residential_use', models.FloatField(null=True, verbose_name=b'Percent Residential Use', blank=True)),
                ('comments_or_corrections', models.TextField(null=True, verbose_name=b'Comments or Corrections', blank=True)),
                ('hydrologic_region', models.CharField(db_index=True, max_length=255, null=True, verbose_name=b'Hydrologic Region', blank=True)),
                ('hydrologic_region_slug', models.SlugField(max_length=255, null=True, verbose_name=b'Hydrologic Region Slug', blank=True)),
                ('supplier_name', models.ForeignKey(to='monthly_water_reports.WaterSupplier', to_field=b'supplier_name')),
            ],
        ),
        migrations.AddField(
            model_name='waterrestriction',
            name='supplier_name',
            field=models.ForeignKey(to='monthly_water_reports.WaterSupplier', to_field=b'supplier_name'),
        ),
        migrations.AddField(
            model_name='waterincentive',
            name='supplier_name',
            field=models.ForeignKey(to='monthly_water_reports.WaterSupplier', to_field=b'supplier_name'),
        ),
    ]
